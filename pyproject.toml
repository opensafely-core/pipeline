[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "opensafely-pipeline"
description = "OpenSAFELY pipeline configuration parsing library"
readme = "README.md"
authors = [{name = "OpenSAFELY", email = "tech@opensafely.org"}]
license = {file = "LICENSE"}
classifiers = [
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
requires-python = ">=3.8"
dependencies = [
  "ruyaml",
]
dynamic = ["version", "optional-dependencies"]

[tool.setuptools.dynamic.optional-dependencies]
fastparser = {file = "fastparser/requirements.txt"}

[project.urls]
Home = "https://opensafely.org"
Documentation = "https://docs.opensafely.org"
Source = "https://github.com/opensafely-core/pipeline"

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
omit = [
  ".venv/*",
  "pipeline/__main__.py",
]
source = [
  "pipeline",
  "tests",
]

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true

[tool.coverage.html]
show_contexts = true

[tool.mypy]
files = "pipeline"
exclude = "^pipeline/__main__.py$"
strict = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true

[tool.pytest.ini_options]
addopts = "--tb=native"

[tool.ruff]
line-length = 88
exclude = [
  "*.egg-info",
  ".direnv",
  ".git",
  ".github",
  ".ipynb_checkpoints",
  ".pytest_cache",
  ".venv",
  "__pycache__",
  "dist",
  "htmlcov",
  "venv",
]

[tool.ruff.lint]
extend-select = [
  "A",  # flake8-builtins
  "I",  # isort
  "INP",  # flake8-no-pep420
  "ISC",  # flake8-implicit-str-concat
  "UP",  # pyupgrade
  "W",  # pycodestyle warning
]
extend-ignore = [
  "E501",
  "E731",
]
isort.lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
"scripts/*.py" = ["INP001"]

[tool.setuptools.packages.find]
include = ["pipeline*"]

[tool.setuptools.dynamic]
version = {file = "version"}
