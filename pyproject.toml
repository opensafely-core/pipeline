[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "opensafely-pipeline"
description = "OpenSAFELY pipeline configuration parsing library"
version = "1+local"
readme = "README.md"
authors = [{name = "OpenSAFELY", email = "tech@opensafely.org"}]
license = {file = "LICENSE"}
classifiers = [
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
]
requires-python = ">=3.8"
dependencies = [
  "pydantic",
  "ruamel.yaml",
]

[project.urls]
Home = "https://opensafely.org"
Documentation = "https://docs.opensafely.org"
Source = "https://github.com/opensafely-core/pipeline"

[tool.black]
exclude = '''
(
  /(
      \.git         # exclude a few common directories
    | \.direnv
    | \.venv
    | venv
  )/
)
'''

[tool.coverage.run]
branch = true
omit = [
  ".venv/*",
  "pipeline/__main__.py",
]

[tool.coverage.report]
fail_under = 100
skip_covered = true

[tool.coverage.html]

[tool.flit.module]
name = "pipeline"

[tool.flit.sdist]
exclude = ["pipeline/__main__.py"]

[tool.isort]
profile = "black"
lines_after_imports = 2
skip_glob = [".direnv", "venv", ".venv"]

[tool.mypy]
files = "pipeline"
exclude = "^pipeline/__main__.py$"
plugins = [
  "pydantic.mypy",
]
strict = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true

[tool.pytest.ini_options]
